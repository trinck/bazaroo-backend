spring.application.name=notification-service
server.port=8088

spring.jpa.hibernate.ddl-auto=update

spring.profiles.active=prod



#discovery
spring.cloud.discovery.enabled=true
eureka.client.service-url.defaultZone=${DISCOVERY_SERVICE_URL:http://localhost:8761/eureka}
eureka.instance.prefer-ip-address=true
spring.config.import= optional:configserver:${CONFIG_SERVICE_URL:http://localhost:9999}

#config discovery
spring.cloud.config.discovery.enabled=true
spring.cloud.config.enabled=true
spring.cloud.config.discovery.service-id=config-service
management.endpoints.web.exposure.include=*

#kafka bootstrap servers
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

#spring cloud stream
spring.cloud.stream.bindings.userEvents-in-0.destination= ${app.broker.topics.user}
spring.cloud.stream.bindings.adminEvents-in-0.destination= ${app.broker.topics.admin}
spring.cloud.stream.bindings.notifsConsumer-in-0.destination= ${app.broker.topics.notification}
spring.cloud.stream.kafka.streams.binder.application-id=notification-service
spring.cloud.stream.kafka.streams.binder.configuration.auto.offset.reset=latest
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=10000
spring.cloud.function.definition=notifsConsumer;userEvents;adminEvents



#elasticsearch config
spring.elasticsearch.uris= ${ELASTICSEARCH_HOST:http://localhost:9200}
spring.elasticsearch.username=elastic
spring.elasticsearch.password=1NWy7Jfh+cco0mCfCxqm


#logs
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG