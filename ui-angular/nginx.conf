
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    map $http_user_agent $prerender_ua {
            default       0;
            "~*Prerender" 0;

            "~*googlebot"                               1;
            "~*yahoo!\ slurp"                           1;
            "~*bingbot"                                 1;
            "~*yandex"                                  1;
            "~*baiduspider"                             1;
            "~*facebookexternalhit"                     1;
            "~*twitterbot"                              1;
            "~*rogerbot"                                1;
            "~*linkedinbot"                             1;
            "~*embedly"                                 1;
            "~*quora\ link\ preview"                    1;
            "~*showyoubot"                              1;
            "~*outbrain"                                1;
            "~*pinterest\/0\."                          1;
            "~*developers.google.com\/\+\/web\/snippet" 1;
            "~*slackbot"                                1;
            "~*vkshare"                                 1;
            "~*w3c_validator"                           1;
            "~*redditbot"                               1;
            "~*applebot"                                1;
            "~*whatsapp"                                1;
            "~*flipboard"                               1;
            "~*tumblr"                                  1;
            "~*bitlybot"                                1;
            "~*skypeuripreview"                         1;
            "~*nuzzel"                                  1;
            "~*discordbot"                              1;
            "~*google\ page\ speed"                     1;
            "~*qwantify"                                1;
            "~*pinterestbot"                            1;
            "~*bitrix\ link\ preview"                   1;
            "~*xing-contenttabreceiver"                 1;
            "~*chrome-lighthouse"                       1;
            "~*telegrambot"                             1;
            "~*google-inspectiontool"                   1;
            "~*petalbot"                                1;
        }

        map $args $prerender_args {
            default $prerender_ua;
            "~(^|&)_escaped_fragment_=" 1;
        }

        map $http_x_prerender $x_prerender {
            default $prerender_args;
            "1"     0;
        }

        map $uri $prerender {
            default $x_prerender;
            "~*\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|woff2|svg|eot)" 0;
        }



    server {
        listen       80;
        server_name  http://bazaroo.work.gd;

        #access_log  /var/log/nginx/host.access.log  main;

        location / {

            if ($prerender = 1) {
                rewrite (.*) /prerenderio last;
            }

            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }


        location /prerenderio {
                    if ($prerender = 0) {
                        return 404;
                    }

                    proxy_set_header X-Prerender-Token b45k7o6m7IKNBGpelJio;
                    proxy_set_header X-Prerender-Int-Type Nginx;

                    proxy_hide_header Cache-Control;
                    add_header Cache-Control "private,max-age=600,must-revalidate";

                    #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
                    resolver 8.8.8.8 8.8.4.4;
                    set $prerender_host "service.prerender.io";
                    proxy_pass https://$prerender_host;
                    rewrite .* /$scheme://$host$request_uri? break;
                }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }




        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

}
